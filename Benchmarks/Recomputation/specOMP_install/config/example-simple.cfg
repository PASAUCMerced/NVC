
#           Document Title:  example-simple.cfg

#                  Subject:  SPEC OMP2001 Simple Example Config file

#              Last Update:  17 Apr 2001 2pm wj

# -------------------------------------------------------------

# This is an example of a very simple OMP2001 config file.
# It is intended to cover the features sufficient to 
# get a OMP2001 baseline run completed. Please see the
# config.txt file for details on config file setup and
# use and other example configuration files for further sample
# implementations.
#
# IMPORTANT: This is an example configuration file for illustration 
# purposes. 
# 

# Comments to the config file are found in lines that begin 
# with the "#" character.

# The first step in creating a configuration file is to document
# your configuration.  The example below contains an example of 
# some of the fields that are needed for documenting your 
# measurements. See example-medium.cfg for an example that
# includes a list of all of the fields required for a full
# publication of results.

#####################################################################
# System Under Test (SUT) Section
# If it affects performance, you need to describe it, either
# in the pre-defined fields or by adding it to the notes section.
# Replace the setting below with the ones that match your
# machine.
#
# hw_model = name of the machine model
# hw_memory = how much memory in the machine you are testing
# hw_disk = what types and size of disk were used when tested
# hw_vendor = what vendor makes the machine being tested
# hw_cpu = what type of processor is in the system
# hw_cpu_mhz = the clock frequency of the processor
# hw_ncpu = the number of CPUs in the system
#######################################################################

# System Description
hw_model        = Computer System XXX 
hw_memory       = 4 GB
hw_disk         = 1 18GB Brand X SCSI disk
hw_vendor       = Computer System Incorporated

# CPU description

hw_cpu          = 350 MHz Computer System processor
hw_cpu_mhz      = 350
hw_ncpu         = 4

# Tester description - edit the date, put your license number here!

test_date       = Apr-2001
license_num     = 
prepared_by     = Computer System Incorporated
display_order   = 1a

# Operating system, file system

sw_os           = Computer System Unix Version YYY
sw_file         = Default


#######################################################################
# End of SUT section
# If this config file were to be applied to several SUTs, edits would
# be needed only ABOVE this point.
######################################################################


######################################################################
# The header section of the config file.  Must appear
# before any instances of "default="
#
# ext = how the binaries you generated will be identified
# tune = specify "base" or "peak" or "all"
# the rest are default values

ext           = compsys
output_format = asc
table         = 0
teeout        = no
teerunout     = yes
tune          = base

######################################################################
# Compiler selection, versions, and dates.
# C and Fortran are used in both OMPM2001 and OMPL2001, so its 
# information appears under
#         default=default=default=default:
#
# sw_compiler<xx> = additional information describing the compiler
# CC  = how the C Compiler is invoked
# FC  = how the FORTRAN compiler is invoked


default=default=default=default:
sw_compiler  = Computer System Compiler C and Fortran90
CC           = cc
FC           = f90


#######################################################################
# Medium Baseline Optimization
# notes0xx are used for baseline tuning description

medium=base=default=default:

notes000     = Baseline C       : cc  -64 -mp -O2
notes001     =          Fortran : f90 -64 -mp -O2
notes002     =

# Note that SPEC baseline rules require that compiler flags be
# "safe". See the SPEC OMP2001 Run Rules for more details on this.
#
# OPTIMIZE = flags applicable to all compilers
# COPTIMIZE = flags applicable to the C compiler
# FOPTIMIZE = flags applicable to the Fortran compiler
# 
# See your compiler manual for information on the flags available
# for your compiler
#

OPTIMIZE     = -64 -mp -O2

#######################################################################
# Medium Portability
# notes8xx are used for listing the portability flags that are needed
# to get some of the programs to compile. While SPEC has made efforts
# to ensure that programs do not require these types of flags, some
# of the programs are advanced enough and the differences between 
# operating systems great enough that some programs require these.
# 
# For portability flags for benchmarks not listed, duplicate the format
# used below. Each benchmark is assigned its own "area" and its own
# setting for EXTRA_CFLAGS
#
# EXTRA_CFLAGS = Additional flags to use for compilation; typically
#                used for portability flags
# EXTRA_LIBS   = Additional libraries used for compilation; typically
#                used for issues of portability
# EXTRA_FFLAGS = Additional flags to use for compilation; typically
#                used for portability flags


medium=default=compsys=default:

notes800     =
notes801     = Portability: 318.galgel_m : -fixedform -extend_source

318.galgel_m=default=compsys=default:
FPORTABILITY = -fixedform -extend_source

#######################################################################
# Large Baseline Optimization
# notes0xx are used for listing the baseline tuning description
# 

large=base=default=default:

notes000     = Baseline   C: cc  -64 -mp -O2
notes001     =      Fortran: f90 -64 -mp -O2
notes002     =

# OPTIMIZE = flags applicable to all compilers
# COPTIMIZE = flags applicable to the C compiler
# FOPTIMIZE = flags applicable to the Fortran compiler
#
# See your compiler manual for information on the flags available
# for your compiler
#

OPTIMIZE     = -64 -mp -O2

#######################################################################
# Large Portability
# notes8xx are used for listing the portability flags that are needed
# to get some of the programs to compile. While SPEC has made efforts
# to ensure that programs do not require these types of flags, some
# of the programs are advanced enough and the differences between 
# operating systems great enough that some programs require these.
#
# For portability flags for benchmarks not listed, duplicate the format
# used below.

large=default=compsys=default:

notes800     =
notes801     = Portability: 


#######################################################################
# End of user-supplied information.  
#######################################################################


